# -*- coding: utf-8 -*-
"""sentiment_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-D8cEegWLtXsq_aRVUsUIzRuM6XU932c

# Install and Import Dependencies
"""

!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124

!pip install transformers requests beautifulsoup4 pandas numpy

import torch
import requests
from transformers import AutoTokenizer, AutoModelForSequenceClassification
import requests
from bs4 import BeautifulSoup
import re
import pandas as pd
import numpy as np

"""# Instantiate Model
We use the BERT-based model for multilingual sentiment analysis.
"""

tokenizer = AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')
model = AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

"""# Test Sentiment Encoding and Prediction
Test the model with a sample review.

"""

tokens = tokenizer.encode("I hated this, absolutely the worst", return_tensors='pt')

results = model(tokens)
int(torch.argmax(results.logits)) + 1

"""# Collect Reviews
Scrape Yelp reviews using BeautifulSoup.


"""

r =  requests.get('https://www.yelp.com/biz/mejico-sydney-2')
soup = BeautifulSoup(r.text, 'html.parser')
regex = re.compile('.*comment.*')
result = soup.find_all('p', {'class': regex})

reviews = [review.text for review in result]

"""# Load Reviews into a DataFrame and Score Sentiments"""

df = pd.DataFrame(np.array(reviews), columns = ['Reviews'])
df['Score'] = None

scores  = []
for i in range(len(df)) :
  tokens = tokenizer.encode(df.iloc[i, -2], return_tensors='pt')
  result = model(tokens)
  scores.append(int(torch.argmax(result.logits)) + 1)

df['Score'] = scores

"""# Display the Results"""

df